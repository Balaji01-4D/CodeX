name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_SOCKET_URL: http://localhost:3001
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      CI: true

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'
          cache-dependency-path: |
            client/pnpm-lock.yaml
            server/pnpm-lock.yaml

      # Server caching
      - name: Cache server
        id: cache-server
        uses: actions/cache@v4
        with:
          path: |
            server/dist
            server/node_modules
          key: ${{ runner.os }}-server-${{ hashFiles('server/pnpm-lock.yaml', 'server/tsconfig.json') }}
          restore-keys: |
            ${{ runner.os }}-server-

      # Client caching
      - name: Cache client
        id: cache-client
        uses: actions/cache@v4
        with:
          path: |
            client/.next
            client/node_modules
            client/.eslintcache
          key: ${{ runner.os }}-client-${{ hashFiles('client/pnpm-lock.yaml', 'client/tsconfig.json', 'client/next.config.mjs') }}
          restore-keys: |
            ${{ runner.os }}-client-

      # Playwright browsers cache
      - name: Cache Playwright browsers
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('client/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install and build server
        working-directory: ./server
        run: |
          echo "Installing server dependencies..."
          # Install all dependencies including devDependencies
          NODE_ENV=development pnpm install
          echo "Building server..."
          echo "Current directory contents:"
          ls -la
          echo "TypeScript version:"
          pnpm tsc --version
          echo "Running build..."
          pnpm build
          echo "Build complete. Dist contents:"
          ls -la dist/

      - name: Install client dependencies
        working-directory: ./client
        run: |
          echo "Installing client dependencies..."
          NODE_ENV=development pnpm install

      - name: Start server
        working-directory: ./server
        run: |
          NODE_ENV=production pnpm start &
          echo "Waiting for server to start..."
          sleep 10

      - name: Build client
        working-directory: ./client
        run: NODE_ENV=production pnpm build

      - name: Install Playwright browsers
        working-directory: ./client
        run: pnpm exec playwright install --with-deps

      - name: Run Playwright tests
        working-directory: ./client
        run: pnpm exec playwright test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: client/playwright-report/
          retention-days: 30

      - name: Upload test screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-screenshots
          path: client/test-results/
          retention-days: 30